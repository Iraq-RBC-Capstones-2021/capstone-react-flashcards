import Link from "next/link";
import { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import Image from "next/image";

import Search from "./Search";
import data from "../sets.js";
import { signOut } from "../store/user/userSlice";

function Navbar() {
  const [open, setOpen] = useState(false);
  const [categoryIsHovered, setCategoryIsHovered] = useState(false);
  const [userImageIsHovered, setUserImageIsHovered] = useState(false);
  const [isClicked, setIsClicked] = useState(false);

  const dispatch = useDispatch();
  const userData = useSelector((state) => state.user.data);

  let Avatar = "/assets/Avatar.png";

  const photo = () => {
    if (userData.photoURL == null) {
      return (
        <Image
          src={Avatar}
          alt={userData.name == null ? "avatar" : userData.name}
          height={40}
          width={40}
          className="rounded-full"
        />
      );
    } else {
      return (
        <img
          src={userData.photoURL}
          alt={userData.name == null ? "avatar" : userData.name}
          height={40}
          width={40}
          className="rounded-full"
        />
      );
    }
  };

  return (
    <nav>
      <div className="flex flex-row w-full p-2 border-b border-grey justify-between">
        {/* logo */}
        <Link href={userData == null ? "/" : "/home"}>
          <a className="flex items-center pr-4">
            <svg
              width="125"
              height=""
              viewBox="0 0 282 110"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <rect
                x="62.0085"
                y="19.4274"
                width="61.2015"
                height="94.3433"
                rx="5"
                transform="rotate(-18.5078 62.0085 19.4274)"
                fill="#EAE5E3"
              />
              <rect
                x="16.0085"
                y="51.4572"
                width="61.2015"
                height="94.3433"
                rx="5"
                transform="rotate(-52.3507 16.0085 51.4572)"
                fill="#FF8749"
              />
              <rect
                y="86.6799"
                width="61.2015"
                height="94.3433"
                rx="5"
                transform="rotate(-76.3859 0 86.6799)"
                fill="#FBEDE6"
              />
              <path
                d="M68.5445 85.48C65.2485 85.48 62.6085 84.472 60.6245 82.456C58.6725 80.408 57.6005 77.624 57.4085 74.104L57.3605 72.472L57.4085 70.888C57.6325 67.432 58.7205 64.68 60.6725 62.632C62.6565 60.584 65.2645 59.56 68.4965 59.56C72.0485 59.56 74.8005 60.696 76.7525 62.968C78.7045 65.208 79.6805 68.248 79.6805 72.088V72.904C79.6805 73.224 79.5685 73.496 79.3445 73.72C79.1525 73.912 78.8965 74.008 78.5765 74.008H61.9685V74.44C62.0645 76.52 62.6885 78.296 63.8405 79.768C65.0245 81.208 66.5765 81.928 68.4965 81.928C69.9685 81.928 71.1685 81.64 72.0965 81.064C73.0565 80.456 73.7605 79.832 74.2085 79.192C74.4965 78.808 74.7045 78.584 74.8325 78.52C74.9925 78.424 75.2645 78.376 75.6485 78.376H78.0005C78.2885 78.376 78.5285 78.456 78.7205 78.616C78.9125 78.776 79.0085 79 79.0085 79.288C79.0085 79.992 78.5605 80.84 77.6645 81.832C76.8005 82.824 75.5685 83.688 73.9685 84.424C72.4005 85.128 70.5925 85.48 68.5445 85.48ZM75.1205 70.696V70.552C75.1205 68.344 74.5125 66.552 73.2965 65.176C72.1125 63.768 70.5125 63.064 68.4965 63.064C66.4805 63.064 64.8805 63.768 63.6965 65.176C62.5445 66.552 61.9685 68.344 61.9685 70.552V70.696H75.1205ZM94.6399 85.48C91.3119 85.48 88.7999 84.392 87.1039 82.216C85.4079 80.04 84.5119 77.288 84.4159 73.96L84.3679 72.52L84.4159 71.08C84.5119 67.784 85.4079 65.048 87.1039 62.872C88.7999 60.664 91.3119 59.56 94.6399 59.56C97.9359 59.56 100.528 60.728 102.416 63.064V52.024C102.416 51.704 102.512 51.448 102.704 51.256C102.928 51.032 103.2 50.92 103.52 50.92H105.824C106.144 50.92 106.4 51.032 106.592 51.256C106.816 51.448 106.928 51.704 106.928 52.024V83.896C106.928 84.216 106.816 84.488 106.592 84.712C106.4 84.904 106.144 85 105.824 85H103.664C103.344 85 103.072 84.904 102.848 84.712C102.656 84.488 102.56 84.216 102.56 83.896V81.88C100.704 84.28 98.0639 85.48 94.6399 85.48ZM95.6479 81.592C97.8559 81.592 99.5039 80.872 100.592 79.432C101.712 77.96 102.32 76.216 102.416 74.2C102.448 73.848 102.464 73.24 102.464 72.376C102.464 71.48 102.448 70.856 102.416 70.504C102.352 68.616 101.744 66.968 100.592 65.56C99.4399 64.152 97.7919 63.448 95.6479 63.448C93.3759 63.448 91.7119 64.152 90.6559 65.56C89.6319 66.968 89.0719 68.824 88.9759 71.128L88.9279 72.52C88.9279 78.568 91.1679 81.592 95.6479 81.592ZM123.479 85.48C120.439 85.48 118.087 84.504 116.423 82.552C114.759 80.568 113.927 77.944 113.927 74.68V61.144C113.927 60.824 114.023 60.568 114.215 60.376C114.439 60.152 114.711 60.04 115.031 60.04H117.431C117.751 60.04 118.007 60.152 118.199 60.376C118.423 60.568 118.535 60.824 118.535 61.144V74.44C118.535 79.208 120.615 81.592 124.775 81.592C126.791 81.592 128.391 80.968 129.575 79.72C130.759 78.44 131.351 76.68 131.351 74.44V61.144C131.351 60.824 131.447 60.568 131.639 60.376C131.863 60.152 132.135 60.04 132.455 60.04H134.855C135.175 60.04 135.431 60.152 135.623 60.376C135.815 60.568 135.911 60.824 135.911 61.144V83.896C135.911 84.216 135.815 84.488 135.623 84.712C135.431 84.904 135.175 85 134.855 85H132.599C132.279 85 132.007 84.904 131.783 84.712C131.591 84.488 131.495 84.216 131.495 83.896V81.784C130.599 83 129.511 83.928 128.231 84.568C126.951 85.176 125.367 85.48 123.479 85.48ZM156.726 85.48C152.15 85.48 148.566 84.376 145.974 82.168C143.414 79.928 142.054 76.696 141.894 72.472C141.862 71.608 141.846 70.2 141.846 68.248C141.846 66.264 141.862 64.824 141.894 63.928C142.054 59.768 143.446 56.568 146.07 54.328C148.694 52.056 152.246 50.92 156.726 50.92C159.542 50.92 162.07 51.4 164.31 52.36C166.55 53.288 168.31 54.632 169.59 56.392C170.902 58.12 171.574 60.152 171.606 62.488V62.584C171.606 62.84 171.494 63.064 171.27 63.256C171.078 63.416 170.854 63.496 170.598 63.496H164.118C163.702 63.496 163.382 63.416 163.158 63.256C162.934 63.064 162.742 62.728 162.582 62.248C162.134 60.616 161.43 59.48 160.47 58.84C159.51 58.168 158.246 57.832 156.678 57.832C152.902 57.832 150.95 59.944 150.822 64.168C150.79 65.032 150.774 66.36 150.774 68.152C150.774 69.944 150.79 71.304 150.822 72.232C150.95 76.456 152.902 78.568 156.678 78.568C158.246 78.568 159.526 78.232 160.518 77.56C161.51 76.856 162.198 75.72 162.582 74.152C162.71 73.672 162.886 73.352 163.11 73.192C163.334 73 163.67 72.904 164.118 72.904H170.598C170.886 72.904 171.126 73 171.318 73.192C171.542 73.384 171.638 73.624 171.606 73.912C171.574 76.248 170.902 78.296 169.59 80.056C168.31 81.784 166.55 83.128 164.31 84.088C162.07 85.016 159.542 85.48 156.726 85.48ZM183.713 85.48C182.017 85.48 180.465 85.16 179.057 84.52C177.681 83.848 176.593 82.952 175.793 81.832C175.025 80.68 174.641 79.416 174.641 78.04C174.641 75.832 175.537 74.056 177.329 72.712C179.153 71.368 181.649 70.44 184.817 69.928L190.817 69.016V68.344C190.817 67.128 190.561 66.232 190.049 65.656C189.537 65.08 188.673 64.792 187.457 64.792C186.721 64.792 186.113 64.92 185.633 65.176C185.153 65.432 184.657 65.784 184.145 66.232C183.697 66.616 183.361 66.872 183.137 67C183.041 67.256 182.865 67.384 182.609 67.384H177.377C177.057 67.384 176.785 67.288 176.561 67.096C176.369 66.872 176.289 66.616 176.321 66.328C176.353 65.464 176.769 64.504 177.569 63.448C178.401 62.392 179.649 61.48 181.313 60.712C183.009 59.944 185.089 59.56 187.553 59.56C191.489 59.56 194.401 60.44 196.289 62.2C198.177 63.928 199.121 66.264 199.121 69.208V83.8C199.121 84.12 199.009 84.408 198.785 84.664C198.561 84.888 198.273 85 197.921 85H192.353C192.033 85 191.745 84.888 191.489 84.664C191.265 84.408 191.153 84.12 191.153 83.8V82.12C190.449 83.112 189.457 83.928 188.177 84.568C186.929 85.176 185.441 85.48 183.713 85.48ZM185.969 80.008C187.441 80.008 188.625 79.528 189.521 78.568C190.449 77.608 190.913 76.2 190.913 74.344V73.672L186.833 74.392C183.953 74.904 182.513 75.912 182.513 77.416C182.513 78.216 182.849 78.856 183.521 79.336C184.193 79.784 185.009 80.008 185.969 80.008ZM205.837 85C205.485 85 205.197 84.888 204.973 84.664C204.749 84.44 204.637 84.152 204.637 83.8V61.24C204.637 60.888 204.749 60.6 204.973 60.376C205.197 60.152 205.485 60.04 205.837 60.04H211.357C211.709 60.04 211.997 60.168 212.221 60.424C212.477 60.648 212.605 60.92 212.605 61.24V63.16C214.365 61.08 216.733 60.04 219.709 60.04H221.821C222.173 60.04 222.461 60.152 222.685 60.376C222.909 60.6 223.021 60.888 223.021 61.24V66.184C223.021 66.504 222.909 66.792 222.685 67.048C222.461 67.272 222.173 67.384 221.821 67.384H217.165C215.853 67.384 214.829 67.752 214.093 68.488C213.389 69.192 213.037 70.2 213.037 71.512V83.8C213.037 84.152 212.909 84.44 212.653 84.664C212.429 84.888 212.141 85 211.789 85H205.837ZM235.612 85.48C232.476 85.48 230.028 84.504 228.268 82.552C226.54 80.568 225.596 77.784 225.436 74.2L225.388 72.52L225.436 70.792C225.564 67.336 226.508 64.6 228.268 62.584C230.06 60.568 232.508 59.56 235.612 59.56C238.524 59.56 240.876 60.504 242.668 62.392V52.12C242.668 51.768 242.78 51.48 243.004 51.256C243.228 51.032 243.516 50.92 243.868 50.92H249.724C250.076 50.92 250.364 51.032 250.588 51.256C250.812 51.48 250.924 51.768 250.924 52.12V83.8C250.924 84.12 250.812 84.408 250.588 84.664C250.364 84.888 250.076 85 249.724 85H244.3C243.98 85 243.692 84.888 243.436 84.664C243.212 84.408 243.1 84.12 243.1 83.8V82.264C241.34 84.408 238.844 85.48 235.612 85.48ZM238.252 79.048C239.692 79.048 240.764 78.6 241.468 77.704C242.172 76.776 242.572 75.592 242.668 74.152C242.7 73.736 242.716 73.128 242.716 72.328C242.716 71.56 242.7 70.968 242.668 70.552C242.604 69.24 242.204 68.152 241.468 67.288C240.732 66.424 239.66 65.992 238.252 65.992C236.748 65.992 235.66 66.44 234.988 67.336C234.348 68.232 233.98 69.464 233.884 71.032C233.852 71.352 233.836 71.848 233.836 72.52C233.836 73.192 233.852 73.688 233.884 74.008C233.98 75.576 234.348 76.808 234.988 77.704C235.66 78.6 236.748 79.048 238.252 79.048ZM266.953 85.48C264.361 85.48 262.185 85.112 260.425 84.376C258.697 83.64 257.417 82.76 256.585 81.736C255.753 80.712 255.337 79.8 255.337 79C255.337 78.68 255.449 78.424 255.673 78.232C255.929 78.008 256.201 77.896 256.489 77.896H261.961C262.153 77.896 262.329 77.976 262.489 78.136C262.873 78.392 263.161 78.6 263.353 78.76C264.057 79.272 264.665 79.656 265.177 79.912C265.721 80.136 266.377 80.248 267.145 80.248C268.073 80.248 268.825 80.072 269.401 79.72C270.009 79.336 270.313 78.808 270.313 78.136C270.313 77.592 270.153 77.16 269.833 76.84C269.545 76.52 268.969 76.216 268.105 75.928C267.241 75.608 265.929 75.272 264.169 74.92C261.513 74.376 259.465 73.496 258.025 72.28C256.617 71.032 255.913 69.368 255.913 67.288C255.913 65.976 256.329 64.728 257.161 63.544C257.993 62.36 259.225 61.4 260.857 60.664C262.521 59.928 264.489 59.56 266.761 59.56C269.033 59.56 271.017 59.912 272.713 60.616C274.409 61.32 275.689 62.184 276.553 63.208C277.449 64.2 277.897 65.112 277.897 65.944C277.897 66.232 277.785 66.488 277.561 66.712C277.369 66.936 277.129 67.048 276.841 67.048H271.849C271.593 67.048 271.353 66.968 271.129 66.808C270.713 66.584 270.345 66.344 270.025 66.088C269.481 65.672 268.969 65.352 268.489 65.128C268.009 64.904 267.417 64.792 266.713 64.792C265.881 64.792 265.209 64.984 264.697 65.368C264.217 65.752 263.977 66.248 263.977 66.856C263.977 67.336 264.105 67.736 264.361 68.056C264.649 68.376 265.225 68.696 266.089 69.016C266.985 69.304 268.297 69.608 270.025 69.928C273.129 70.472 275.385 71.432 276.793 72.808C278.233 74.184 278.953 75.8 278.953 77.656C278.953 80.024 277.897 81.928 275.785 83.368C273.673 84.776 270.729 85.48 266.953 85.48Z"
                fill="black"
              />
            </svg>
          </a>
        </Link>

        {/* nav links */}
        <div className="hidden lg:flex lg:flex-row items-center space-x-2">
          <Link href={userData == null ? "/" : "/home"}>
            <a className="py-1.5 px-2 hover:bg-grey rounded-lg transition duration-300">
              Home
            </a>
          </Link>
          <div
            className="relative"
            onMouseEnter={() => setCategoryIsHovered(true)}
            onMouseLeave={() => setCategoryIsHovered(false)}
          >
            <a className="inline-flex items-center py-1.5 px-2 hover:bg-grey rounded-lg transition duration-300 space-x-1.5">
              <div>Categories</div>
              <svg
                width="15"
                height="15"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.2567 6.33104C20.6262 5.92053 21.2585 5.88726 21.669 6.25671C22.0795 6.62617 22.1128 7.25846 21.7433 7.66897L12.7433 17.669C12.3461 18.1104 11.654 18.1104 11.2567 17.669L2.25671 7.66897C1.88726 7.25846 1.92053 6.62617 2.33104 6.25671C2.74155 5.88726 3.37384 5.92053 3.7433 6.33104L12 15.5052L20.2567 6.33104Z"
                  fill="#1A1A1A"
                />
              </svg>
            </a>
            {categoryIsHovered && (
              <div className="absolute -right-32 flex bg-white shadow-md rounded-lg p-2 text-center transition duration-300 z-10">
                {data.top_categories.map((category) => (
                  <div key={category.name} className="">
                    <Link href={`/search/${category.name.toLowerCase()}`}>
                      <a className="block px-4 py-1 font-medium rounded-lg hover:bg-grey transition duration-300">
                        {category.name}
                      </a>
                    </Link>
                    {category.categories.map((subCategory) => (
                      <Link
                        href={`/search/${subCategory.toLowerCase()}`}
                        key={subCategory}
                      >
                        <a className="block px-4 py-1 rounded-lg hover:bg-grey transition duration-300">
                          {subCategory}
                        </a>
                      </Link>
                    ))}
                  </div>
                ))}
              </div>
            )}
          </div>
          {userData !== null && (
            <Link href={`/library`}>
              <a className="py-1.5 px-2 hover:bg-grey rounded-lg transition duration-300">
                My library
              </a>
            </Link>
          )}
          <Link href="/new">
            <a className="btn-primary">
              <b>+</b> Create
            </a>
          </Link>
        </div>

        {/* search box */}
        <div className="hidden lg:flex items-center mx-4">
          <Search />
        </div>

        {/* other nav links */}
        {userData === null ? (
          <div className="hidden lg:flex items-center justify-end space-x-3">
            <Link href="/register">
              <a className="btn-secondary">Register</a>
            </Link>
            <Link href="/signin">
              <a className="btn-primary">Sign in</a>
            </Link>
          </div>
        ) : (
          <div className="flex items-center justify-end flex-grow lg:flex-grow-0 space-x-3">
            <svg
              width="30"
              height="30"
              viewBox="0 0 40 40"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="mr-4"
            >
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M28.3386 34.766C28.5516 34.3184 28.6622 33.829 28.6622 33.3333H33.3334C35.1743 33.3333 36.6667 31.841 36.6667 30V26.7042C36.6667 25.613 36.1327 24.591 35.2369 23.9678L31.875 21.6291V12.6361C31.875 5.98126 26.3705 2.5 20 2.5C13.6295 2.5 8.12504 6.10472 8.12504 12.6361V21.6291L4.76316 23.9678C3.86742 24.591 3.33337 25.613 3.33337 26.7042V30C3.33337 31.841 4.82576 33.3333 6.66671 33.3333H11.3371C11.3368 33.8142 11.441 34.3028 11.6615 34.7659C13.0631 37.7105 15.9471 39.1667 20 39.1667C24.053 39.1667 26.937 37.7105 28.3386 34.766ZM20 36.25C17.1312 36.25 15.4594 34.9892 14.6712 33.3333L25.3289 33.3333C24.5406 34.9892 22.8688 36.25 20 36.25Z"
                fill="#1A1A1A"
              />
            </svg>
            <div
              className="relative"
              onMouseEnter={() => setUserImageIsHovered(true)}
              onMouseLeave={() => setUserImageIsHovered(false)}
            >
              {photo()}
              {userImageIsHovered && (
                <div className="absolute right-0 flex-col bg-white shadow-md rounded-lg p-2 text-center transition duration-300 z-10">
                  <Link href={`/profile/${userData.uid}`}>
                    <a className="block px-4 py-1 rounded-lg hover:bg-grey transition duration-300">
                      Profile
                    </a>
                  </Link>
                  <hr />
                  <button onClick={() => dispatch(signOut())}>
                    <a className="block px-4 py-1 rounded-lg hover:bg-grey transition duration-300">
                      Logout
                    </a>
                  </button>
                </div>
              )}
            </div>
          </div>
        )}

        {/* mobile menu icon */}
        <div className="flex items-center mx-2 lg:hidden">
          <button
            className="flex p-2.5 rounded-md border-2 border-black hover:text-primary hover:border-primary transition duration-300"
            onClick={() => setOpen(!open)}
          >
            {!open ? (
              <svg
                className="fill-current w-3"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z" />
              </svg>
            ) : (
              <svg
                className="fill-current w-3"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M13.4132 12L20.6897 19.278C21.6306 20.2191 20.2192 21.6308 19.2783 20.6896L12 13.4099L4.72169 20.6896C3.78076 21.6308 2.36938 20.2191 3.3103 19.278L10.5868 12L3.3103 4.72203C2.36938 3.78092 3.78076 2.36925 4.72169 3.31036L12 10.5901L19.2783 3.31036C20.2192 2.36925 21.6306 3.78092 20.6897 4.72203L13.4132 12Z" />
              </svg>
            )}
          </button>
        </div>
      </div>

      {/* mobile view */}
      {open && (
        <div className="w-full block lg:hidden border-b border-grey pb-2 transition duration-300">
          <Link href={userData == null ? "/" : "/home"}>
            <a className="block mt-4 p-2 rounded-lg hover:bg-grey transition duration-300">
              Home
            </a>
          </Link>
          <div onClick={() => setIsClicked(!isClicked)}>
            <a className="flex mt-4 p-2 rounded-lg space-x-2 items-center hover:bg-grey cursor-pointer transition duration-300">
              <span>Categories</span>
              {isClicked ? (
                <svg
                  width="15"
                  height="15"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M20.2567 17.669L12 8.49485L3.7433 17.669C3.37384 18.0795 2.74155 18.1128 2.33104 17.7433C1.92053 17.3738 1.88726 16.7415 2.25671 16.331L11.2567 6.33104C11.654 5.88965 12.3461 5.88965 12.7433 6.33104L21.7433 16.331C22.1128 16.7415 22.0795 17.3738 21.669 17.7433C21.2585 18.1128 20.6262 18.0795 20.2567 17.669Z"
                    fill="#1A1A1A"
                  />
                </svg>
              ) : (
                <svg
                  width="15"
                  height="15"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M20.2567 6.33104C20.6262 5.92053 21.2585 5.88726 21.669 6.25671C22.0795 6.62617 22.1128 7.25846 21.7433 7.66897L12.7433 17.669C12.3461 18.1104 11.654 18.1104 11.2567 17.669L2.25671 7.66897C1.88726 7.25846 1.92053 6.62617 2.33104 6.25671C2.74155 5.88726 3.37384 5.92053 3.7433 6.33104L12 15.5052L20.2567 6.33104Z"
                    fill="#1A1A1A"
                  />
                </svg>
              )}
            </a>
            {isClicked && (
              <div className="flex p-2 text-center transition duration-300">
                {data.top_categories.map((category) => (
                  <div key={category.name} className="">
                    <Link href={`/search/${category.name.toLowerCase()}`}>
                      <a className="block px-4 py-1 font-medium rounded-lg hover:bg-grey transition duration-300">
                        {category.name}
                      </a>
                    </Link>
                    {category.categories.map((subCategory) => (
                      <Link
                        href={`/search/${subCategory.toLowerCase()}`}
                        key={subCategory}
                      >
                        <a className="block px-4 py-1 rounded-lg hover:bg-grey transition duration-300">
                          {subCategory}
                        </a>
                      </Link>
                    ))}
                  </div>
                ))}
              </div>
            )}
          </div>
          {userData !== null && (
            <Link href={`/library/${userData.uid}`}>
              <a className="block mt-4 p-2 rounded-lg hover:bg-grey transition duration-300">
                My library
              </a>
            </Link>
          )}
          <Link href="/new">
            <a className="block mt-4 p-2 rounded-lg hover:bg-grey transition duration-300">
              Create
            </a>
          </Link>

          {/* search box */}
          <div className="flex items-center mt-4 p-2">
            <Search />
          </div>

          {userData == null && (
            <>
              <Link href="/register">
                <a className="block mt-4 p-2 rounded-lg hover:bg-grey transition duration-300">
                  Register
                </a>
              </Link>
              <Link href="/signin">
                <a className="block mt-4 p-2 rounded-lg hover:bg-grey transition duration-300">
                  Sign in
                </a>
              </Link>
            </>
          )}
        </div>
      )}
    </nav>
  );
}
export default Navbar;
